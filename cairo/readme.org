* =fast_gaussian_blur.c=

=fast_gaussian_blur.c= is an SIMD implementation of Ivan Kutskir's
[[https://blog.ivank.net/fastest-gaussian-blur.html][Fastest Gaussian Blur (in linear time)]].

([[https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html][GCC vector extension]] is pretty nice!)

TABLE: various optimizations and their effects (top = new, bottom = old)

| input file | implementation          | optimizations                     |     time |
|------------+-------------------------+-----------------------------------+----------|
| cballs.png | use intrinsics + inline | clang -Ofast -march=native -mavx2 | 0.001788 |
| cballs.png | use intrinsics + inline | clang -O3 -march=native -mavx2    | 0.003154 |
| cballs.png | use intrinsics + inline | clang -O3                         | 0.003222 |
| cballs.png | use intrinsics + inline | clang -O0                         | 0.006216 |
| cballs.png | reduce memcpy           | clang -O3 -march=native -mavx2    | 0.005254 |
| cballs.png | reduce memcpy           | clang -O3                         | 0.005410 |
| cballs.png | slide window            | clang -O3 -march=native -mavx2    | 0.005357 |
| cballs.png | slide window            | clang -O3                         | 0.005987 |
| cballs.png | separate kernel         | clang -O3                         | 0.028168 |

On my machine, the best result is ~30 cycles per pixel. Is it good or
bad?  I don't know.  This number also seems to increase when the image
gets larger.  If the image is 3840x2160, it will take ~100 cycles per
pixel.  I don't know why.
